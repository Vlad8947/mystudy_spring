Класс AppConfig - указываются все настройки в коде. Аналогичным образом можно указать все настройки чере xml файлы. Для
спринга пример в первом модуле данных конспектов. Для hibernate - myStudy -> hibernate.

@PersistenceContext - внедрение EntityManager

@Entity (класс Camera) - сущность базы данных. Для корректного создания класса-сущности, должны удовлетворяться
    следующие условия:
- наличиe ID
- наличие конструктора по-умолчанию
- отсутствие модификатора final

@MappedSuperclass (AbstractEntity) - для корректного использования наследования в сущностях
@Id
@GeneratedValue

@Table (Camera) - указание допоплнительных параметров для сущности таблицы
@Column
@Temporal - указание типа данных SQL

А также @OneToOne, @ManyToOne, @ManyToMany (пакеты соответственно)

----------------
Hibernate-Validator (требуется подключить зависимость)

Для примера, сделаем сущность Camera валидируемой. Для этого добавим к её параметру name аннотацию
@Size, в которой укажем параметры строки, а также сообщение об ошибке прохождения валидации.

Чтобы можно было валидировать сущности, нужно прописывать @Valid перед объявлением переменной (например в принимаемых
параметрах метода на уровне контроллеров)

@Pattern - для задания паттерна расположения символов
